#!/bin/bash

source "$OPENSHIFT_CARTRIDGE_SDK_BASH"
source "${OPENSHIFT_NODEJS_DIR}lib/util"

function start {
  if ! [ is_running "$PM2_HOME/pm2.pid" ]; then
    load_pm2_env
    pm2 start "${OPENSHIFT_NODEJS_DIR}conf/ecosystem.json"
  fi
}

function stop {
  if is_running "$PM2_HOME/pm2.pid"; then
    pm2 kill
  fi
}

function status {
  if is_running "$PM2_HOME/pm2.pid"; then
    pm2 status
  fi
}

function reload {
  if is_running "$PM2_HOME/pm2.pid"; then
    pm2 reload all
  fi
}

function restart {
  stop
  start
}

# function pre-repo-archive() {
#     rm -rf ${OPENSHIFT_NODEJS_DIR}tmp/{node_modules,node_modules}

#     # If the node_modules/ directory exists, then "stash" it away for redeploy.
#     node_modules_dir="${OPENSHIFT_REPO_DIR}node_modules"
#     if [ -d "$node_modules_dir" ]; then
#       echo 'Saving away previously installed Node modules'
#       mv "$node_modules_dir" "${OPENSHIFT_NODEJS_DIR}tmp/node_modules"
#       mkdir -p "$node_modules_dir"
#     fi
# }

function build() {
  echo "Building NodeJS cartridge"
  update_all

  node_modules_dir="${OPENSHIFT_REPO_DIR}node_modules/"
  saved_modules_dir="${OPENSHIFT_DATA_DIR}node_modules"

  # Ensure that we have the node_modules directory.
  mkdir -p $node_modules_dir

  # Restore the saved node_modules from prior builds.
  if [ -d "${OPENSHIFT_DATA_DIR}node_modules" ]; then
      for d in `ls -a ${OPENSHIFT_DATA_DIR}node_modules`; do
          [ -e "${node_modules_dir}$d" ]  ||  \
            mv "${OPENSHIFT_DATA_DIR}node_modules/$d" "$node_modules_dir"
      done
      rm -rf "${OPENSHIFT_DATA_DIR}node_modules"
  fi

  if [ -f "${OPENSHIFT_REPO_DIR}.openshift/markers/SILENT" ]; then
    silent="--silent"
  else
    silent=""
  fi
  
  # Workaround for failure in npm install when a package in package.json
  # points to a git commit.
  # This issue occurs because we are running in the context of a
  # git post receive-hook
  unset GIT_DIR
  unset GIT_WORK_TREE

  if [ -f "${OPENSHIFT_REPO_DIR}"/package.json ]; then
      (cd "${OPENSHIFT_REPO_DIR}"; nodejs_context "npm install -d '$silent'")
  fi
  # reload
}

function post-deploy() {
  if is_running "$PM2_HOME/pm2.pid"; then
    reload
  else
    start
  fi
}

function tidy {
  client_message "Emptying nodejs logs in dir: $OPENSHIFT_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_LOG_DIR/nodejs.log*
  rm -rf ${OPENSHIFT_NODEJS_DIR}tmp/*
  pm2 flush
}

case "$1" in
  build)             build ;;
  start)             start ;;
  stop)              stop ;;
  status)            status ;;
  reload)            reload ;;
  restart)           restart ;;
  post-deploy)       post-deploy ;;
  tidy)              tidy ;;
  pre-repo-archive)  pre-repo-archive ;;
  *)         exit 0
esac
